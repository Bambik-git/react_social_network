{"version":3,"file":"static/js/900.705a0fde.chunk.js","mappings":"yJACA,QAAuD,yBAAvD,EAA+F,8BAA/F,EAAuI,yBAAvI,EAA+K,8BAA/K,EAAwN,0B,qBCIxN,MAgCA,EAhCiBA,IAEb,IAAIC,EAAkBD,EAAME,YAAYA,YAAYC,KAAIC,IAAUC,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAI,YAAcJ,EAAOK,GAAGH,SAAEF,EAAOM,WAC7GC,EAAmBX,EAAME,YAAYU,aAAaT,KAAIU,IAAWR,EAAAA,EAAAA,KAAA,MAAAC,SAAKO,EAAQA,YAC9EC,EAAiBd,EAAME,YAAYY,eAGvC,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcX,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,EAAmBX,UAC/BD,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAAeX,SACzBL,OAGTI,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,KAChBZ,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAAcX,SACxBK,OAGTI,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACID,EAAAA,EAAAA,KAAA,YAAUa,MAAOJ,EACPK,YAAa,gBACbC,SAAWC,GAAUrB,EAAMsB,mBAAmBD,EAAME,OAAOL,UAASb,EAAAA,EAAAA,KAAA,UAC9EA,EAAAA,EAAAA,KAAA,UAAQmB,QAAUA,IAAOxB,EAAMyB,gBAAkBnB,SAAC,gEAGpD,E,sBCPd,SAAeoB,E,OAAAA,KAASC,EAAAA,EAAAA,KAlBDC,IACZ,CACH1B,YAAa0B,EAAMC,gBAIDC,IACf,CACHR,mBAAqBS,IACjBD,GAASE,EAAAA,EAAAA,IAAsCD,GAAM,EAEzDN,cAAeA,KACXK,GAASG,EAAAA,EAAAA,MAA6B,MAMoBC,EAAAA,EAAtE,CAAyFC,E","sources":["webpack://react-app-1/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/dialogs.js","Components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Dialogs_logo__FwTg4\",\"dialogs\":\"Dialogs_dialogs__reC+G\",\"dialogsItems\":\"Dialogs_dialogsItems__cc5R5\",\"message\":\"Dialogs_message__-aN+W\",\"verticalLine\":\"Dialogs_verticalLine__1dM3O\",\"listItem\":\"Dialogs_listItem__KuD47\"};","import React from \"react\";\r\nimport style from './Dialogs.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.dialogsData.map(dialog => <li><Link to={`/dialogs/` + dialog.id}>{dialog.name}</Link></li>)\r\n    let messagesElements = props.dialogsData.messagesData.map(message => <li>{message.message}</li>)\r\n    let NewMessageText = props.dialogsData.NewMessageText\r\n\r\n    //event обьект события onChange\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                <ul className={style.listItem}>\r\n                    {dialogsElements}\r\n                </ul>\r\n            </div>\r\n            <div className={style.verticalLine}></div>\r\n            <div>\r\n                <ul className={style.message}>\r\n                    {messagesElements}\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <textarea value={NewMessageText}\r\n                          placeholder={'Enter message'}\r\n                          onChange={(event) => props.onNewMessageChange(event.target.value)}/><br/>\r\n                <button onClick={ () =>  props.onSendMessage()  }>Отправить</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {send_message_ActionCreator, update_new_message_text_ActionCreator} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onNewMessageChange: (text) => {\r\n            dispatch(update_new_message_text_ActionCreator(text))\r\n        },\r\n        onSendMessage: () => {\r\n            dispatch(send_message_ActionCreator())\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose( connect(mapStateToProps, mapDispatchToProps), withAuthRedirect )(Dialogs);"],"names":["props","dialogsElements","dialogsData","map","dialog","_jsx","children","Link","to","id","name","messagesElements","messagesData","message","NewMessageText","_jsxs","className","style","value","placeholder","onChange","event","onNewMessageChange","target","onClick","onSendMessage","compose","connect","state","dialogsPage","dispatch","text","update_new_message_text_ActionCreator","send_message_ActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}